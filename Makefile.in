## The type of library we want to build. Possible values:
##   relocatable
##   static
CSS_LIBRARY_TYPE=static

# You may edit this makefile as long as you keep these original 
# target names defined.
MODE=debug
GNATMAKE=@GNATMAKE@
GNATCLEAN=gnatclean
GPRINSTALL=@GPRINSTALL@
SVN=svn
INSTALL=@INSTALL@
DYNAMO=dynamo

GPRPATH=cssada.gpr

BUILDS_SHARED=@BUILDS_SHARED@

version=@CSS_VERSION@

distdir=ada-css-@CSS_VERSION@

DIST_FILE=ada-css-@CSS_VERSION@.tar.gz

LN_S=@LN_S@
MKDIR=mkdir
CP=cp
LN=ln -s

ifeq (${OS},Windows_NT)
LIBEXT=dll
LIBVER=dll
else
LIBEXT=so
LIBVER=so.$(version)
endif

srcdir = .
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
top_builddir = .

# share/ada/adainclude
infix_inc=@ADA_INC_BASE@

# share/ada/adainclude
infix_prj=@ADA_PRJ_BASE@

# lib
infix_lib=@ADA_LIB_BASE@

# lib/ada/adalib
infix_ali=@ADA_ALI_BASE@

includedir=${prefix}/${infix_inc}
projectdir=${prefix}/${infix_prj}
bindir=${prefix}/bin
sharedir=${prefix}/share
libdir=${prefix}/${infix_lib}
alidir=${prefix}/${infix_ali}

libname=libada_css

PROCESSORS=@NR_CPUS@
MAKE_ARGS=-XMODE=${MODE} -XCSS_LIBRARY_TYPE=${CSS_LIBRARY_TYPE} -XPROCESSORS=${PROCESSORS}
ifeq ($(CSS_LIBRARY_TYPE),relocatable)
MAKE_ARGS += -XUTIL_BUILD=relocatable -XUTIL_LIBRARY_TYPE=relocatable
MAKE_ARGS += -XXMLADA_BUILD=relocatable
MAKE_ARGS += -XLIBRARY_TYPE=relocatable
endif

ifeq (${BUILDS_SHARED},yes)
all:     static shared tools
install: install_static install_shared install-tool install-info
else
all:     static tools
install: install_static install-tool install-info
endif

# Build executables for all mains defined by the project.
build: setup
	$(GNATMAKE) -p -P"$(GPRPATH)" $(MAKE_ARGS)

static:
	$(MAKE) CSS_LIBRARY_TYPE=static build

shared:
	$(MAKE) CSS_LIBRARY_TYPE=relocatable build

setup: obj/css/static lib/css/static

obj/css/static lib/css/static:
	$(MKDIR) -p $@

tools:
	$(GNATMAKE) -p -Pcss_tools $(MAKE_ARGS)

# Not intended for manual invocation.
# Invoked if automatic builds are enabled.
# Analyzes only on those sources that have changed.
# Does not build executables.
autobuild:
	$(GNATMAKE) $(MAKE_ARGS) -gnatc -c -k  -P "$(GPRPATH)"

# Development targets that requires ayacc and aflex to be installed.
# Do not call these unless you modify the lex/yacc grammar.
parser:	
	cd src/parser && \
	   ayacc -n 256 -s -v -e .ada css-parser-parser.y && \
	   gnatchop -w css-parser-parser.ada && \
	   rm -f css-parser-parser.ada
	#-rm -f src/parser/css-parser-lexer_io.ads
	#-rm -f src/parser/css-parser-lexer_io.adb
	-rm -f src/parser/css-parser-parser.verbose

lexer:
	cd src/parser; \
	aflex -ms -L css-parser-lexer.l
	cd src/parser && \
	  gnatchop -w css-parser-lexer.ada && \
	  rm -f css-parser-lexer.ada

parser-tools:
	cd tools/parser && \
	   ayacc -n 256 -s -v -e .ada css-analysis-parser-parser.y && \
	   gnatchop -w css-analysis-parser-parser.ada && \
	   rm -f css-analysis-parser-parser.ada
	#-rm -f src/parser/css-parser-lexer_io.ads
	#-rm -f src/parser/css-parser-lexer_io.adb
	-rm -f tools/parser/css-analysis-parser-parser.verbose

lexer-tools:
	cd tools/parser; \
	aflex -ms -L css-analysis-parser-lexer.l
	cd tools/parser && \
	  gnatchop -w css-analysis-parser-lexer.ada && \
	  rm -f css-analysis-parser-lexer.ada

# Clean the root project of all build products.
clean:
	-$(GNATCLEAN) -q -P "$(GPRPATH)" -XCSS_LIBRARY_TYPE=static
	-$(GNATCLEAN) -q -P "$(GPRPATH)" -XCSS_LIBRARY_TYPE=relocatable \
	  -XLIBRARY_TYPE=relocatable -XXMLADA_BUILD=relocatable -XUTIL_BUILD=relocatable -XUTIL_LIBRARY_TYPE=relocatable
	-$(GNATCLEAN) -q -Pcss_tests
	-$(GNATCLEAN) -q -Pcss_tools
	-rm -f lib/*.a lib/*.$(DLLEXT)

# Clean root project and all imported projects too.
clean_tree:
	$(GNATCLEAN) -q -P "$(GPRPATH)" -r

# Check *all* sources for errors, even those not changed.
# Does not build executables.
analyze:
	$(GNATMAKE) $(MAKE_ARGS) -f  -gnatc -c -k  -P "$(GPRPATH)"

# Clean, then build executables for all mains defined by the project.
rebuild: clean build

# Build and run the unit tests
check test:	build
	$(GNATMAKE) $(MAKE_ARGS) -p -Pcss_tests
	bin/css_harness -xml css-aunit.xml

doc:
	$(DYNAMO) build-doc -markdown wiki

# Files to package in source distribution
DISTFILES=README.md LICENSE.txt NOTICE.txt NEWS config.guess configure config.sub \
configure.in Makefile.in install-sh aclocal.m4 \
cssada.gpr.in css_tools.gpr.in css_tests.gpr.in config.gpr samples.properties samples.gpr \
src config regtests tools samples \
bin obj lib distrib

dist:
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	-rm -f $(distdir)/bin/*
	-rm -rf $(distdir)/obj/*
	-rm -rf $(distdir)/lib/*
	-rm -rf $(distdir)/regtests/result
	tar --exclude=.svn --exclude="*~" --exclude="*.o" --exclude="*.ali" \
	    --exclude="*.log" --exclude="*.a" \
	    -cvzf $(DIST_FILE) $(distdir)

install_static:
	$(MAKE) CSS_LIBRARY_TYPE=static install_lib

install_shared:
	$(MAKE) CSS_LIBRARY_TYPE=relocatable install_lib

install_lib:
ifneq (${GPRINSTALL},)
	$(GPRINSTALL) -p -f --prefix=${prefix} $(MAKE_ARGS) \
		--build-name=$(CSS_LIBRARY_TYPE) $(GPRPATH)
else
	$(MKDIR) -p ${includedir}/ada-css
	$(MKDIR) -p ${projectdir}/ ${bindir}/
	${MKDIR} -p ${alidir}/ada-css
	${CP} -p src/*.ad[bs] ${includedir}/ada-css
	sed -e "s,LIBRARY_TYPE,$(CSS_LIBRARY_TYPE),g" < distrib/cssada.gpr > ${projectdir}/cssada.gpr
	${CP} -p lib/css/$(CSS_LIBRARY_TYPE)/*.ali ${alidir}/ada-css/
ifeq ($(CSS_LIBRARY_TYPE),static)
	${CP} lib/css/$(CSS_LIBRARY_TYPE)/$(libname).a ${libdir}/
else
	${CP} -p lib/css/$(CSS_LIBRARY_TYPE)/$(libname).$(LIBVER) ${libdir}/
ifneq (${OS},Windows_NT)
	cd ${libdir} && \
	   rm -f $(libname).$(LIBEXT) && \
	   ${LN} $(libname).$(LIBVER) $(libname).$(LIBEXT)
else
	${CP} -p lib/css/$(CSS_LIBRARY_TYPE)/$(libname).$(LIBVER) ${bindir}/
endif
endif
endif

install-tool:
	${MKDIR} -p ${bindir} ${sharedir}/csstools
	$(INSTALL) bin/csstools ${bindir}/csstools
	-rm -rf ${sharedir}/csstools
	$(CP) -r config ${sharedir}/csstools

install-info:
ifeq (${GPRINSTALL},)
	@echo "Installation directories:"
	@echo "  Ada source files:    ${includedir}"
	@echo "  ALI files:           ${alidir}"
	@echo "  Libraries:           ${libdir}"
	@echo "  GNAT project:        ${projectdir}"
else
	@echo "Environment setup:"
	@echo "  export ADA_PROJECT_PATH=${projectdir}:$$ADA_PROJECT_PATH"
endif

uninstall:
ifneq (${GPRINSTALL},)
	-$(GPRINSTALL) -q -f --prefix=${prefix} $(MAKE_ARGS) --uninstall $(GPRPATH)
else
	rm -rf ${includedir}/ada-css ${alidir}/ada-css
	rm -f ${libdir}/$(libname).a
	rm -f ${libdir}/$(libname).$(LIBEXT)
	rm -f ${projectdir}/cssada.gpr
endif

.PHONY: tools
